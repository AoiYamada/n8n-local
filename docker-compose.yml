services:
  postgres:
    image: postgres:17.6-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U n8n -d n8n']
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - n8n-network

  n8n:
    image: n8nio/n8n:1.112.5
    restart: unless-stopped
    environment:
      - GENERIC_TIMEZONE="HKT"
      - TZ="HKT"
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_RUNNERS_ENABLED=true
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_SCHEMA=n8n
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - WEBHOOK_URL=http://localhost:5678
    ports:
      - 5678:5678
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n-output:/data
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - n8n-network
    # my local ollama could be accessed in this way:
    # http://host.docker.internal:11434
    # lm studio
    # http://host.docker.internal:1234

networks:
  n8n-network:
    driver: bridge

volumes:
  postgres_data:
  n8n_data:
